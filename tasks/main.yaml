---

- name: Test distribution
  assert:
    that: >
      ansible_os_family == 'RedHat' or
      ansible_os_family == 'Debian'

- name: Add YUM repo
  yum_repository:
    name: prometheus
    description: Prometheus YUM repo
    baseurl: "{{ prometheus_yumrepo_url }}"
    gpgkey: "{{ prometheus_yumrepo_gpgkey }}"
  when: >
    ansible_os_family == 'RedHat'
  tags:
    - prometheus_pkg

- name: Add APT key
  apt_key:
    url: "{{ prometheus_apt_repo_key }}"
    state: present
  when: >
    ansible_os_family == 'Debian'
  tags:
    - prometheus_pkg

- name: Add APT repository
  apt_repository:
    filename: prometheus
    repo: "{{ prometheus_apt_repo_string }}"
  when: >
    ansible_os_family == 'Debian'
  tags:
    - prometheus_pkg

- name: Install Prometheus package
  package:
    name: "{{ prometheus_pkg }}"
  notify:
    - Restart Prometheus service
  tags:
    - prometheus_pkg

- name: Create Prometheus configuration file
  template:
    src: prometheus.conf.j2
    dest: "{{ prometheus_config_file }}"
  notify:
    - Reload Prometheus service
  tags:
    - prometheus_config

- name: Create Prometheus default service file
  template:
    src: prometheus.default.j2
    dest: "{{ prometheus_default_file }}"
  notify:
    - Restart Prometheus service
  tags:
    - prometheus_config

- name: Create rule files directory
  file:
    path: "{{ prometheus_rule_files_dir ~ '/' ~ item.key | dirname }}"
    state: directory
  with_dict: "{{ prometheus_rule_files }}"
  tags:
    - prometheus_config

- name: Create rule files
  template:
    src: prometheus.rules.j2
    dest: "{{ prometheus_rule_files_dir ~ '/' ~ item.key ~ '.yml' }}"
  with_dict: "{{ prometheus_rule_files }}"
  notify:
    - Reload Prometheus service
  tags:
    - prometheus_config

- name: Make sure Prometheus service is enabled
  service:
    name: "{{ prometheus_service }}"
    enabled: yes

- name: Make sure Prometheus service is running
  service:
    name: "{{ prometheus_service }}"
    state: started
  register: prometheus_service_started
